{"version":3,"sources":["components/Header/Header.module.scss","components/MoviePreview/MoviePreview.module.scss","containers/Layout/Layout.module.scss","components/About/About.module.scss","components/MovieList/MovieList.module.scss","components/ui/Modal/Modal.module.scss","components/ui/Backdrop/Backdrop.module.css","components/Header/Header.jsx","services/utilService.js","components/ui/Modal/Modal.jsx","components/MoviePreview/MoviePreview.jsx","components/MovieList/MovieList.jsx","components/About/About.jsx","services/movieService.js","components/ui/Backdrop/Backdrop.js","containers/Layout/Layout.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","header","props","className","classes","onClick","document","getElementById","scrollIntoView","imges","saveToStorage","key","value","str","JSON","stringify","localStorage","setItem","loadFromStorage","getItem","parse","getImg","title","modal","movie","director","producer","MoviePreview","movieTitle","savedMovie","Object","keys","find","fab","img","utilService","modalCmp","show","Modal","style","backgroundImage","backdrop","click","movieList","console","log","movieForDisplay","movies","map","about","id","MovieList","a","swapiModule","getFilms","results","loadMovies","rootURL","request","url","cb","fetch","then","res","json","data","catch","err","singularRequestGenerator","path","pluralRequestGenerator","queryObject","undefined","arguments","length","searchParams","URLSearchParams","append","toString","getResources","getPerson","getPeople","getFilm","getPlanet","getPlanets","getSpecies","getAllSpecies","getStarship","getStarships","getVehicle","getVehicles","Backdrop","clicked","layout","state","handleSave","savedMovies","val","setState","handleBackdrop","prevState","movieServise","this","Header","handelClick","About","Component","App","Layout","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d9f2266.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header-container\":\"Header_header-container__16_5v\",\"content\":\"Header_content__3z1OQ\",\"header-title\":\"Header_header-title__3CwIl\",\"go-btn\":\"Header_go-btn__1T5qm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview-container\":\"MoviePreview_preview-container__L3cjc\",\"img-movie\":\"MoviePreview_img-movie__3J6VF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-layout\":\"Layout_main-layout__-VOaa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about-container\":\"About_about-container__2wzk2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-container\":\"MovieList_list-container__3YWV6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-container\":\"Modal_modal-container__joHEQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1-2Yk\"};","\nimport React from 'react' \nimport classes from './Header.module.scss'\n\n\n\nconst header = (props) =>{\n\n    const scrollToElement = () => {\n        const element = document.getElementById('about')\n        element.scrollIntoView()\n    }\n    \n    return(\n        <div className={classes['header-container']}>\n        <div className={classes['content']}>\n            <h1 className={classes['header-title']}>CHooSE YoUR FAVoRiTE STAR-WARS MoViE</h1>\n            \n        </div>\n            <button onClick={()=>scrollToElement()} className={classes['go-btn']} >May the force be with you</button>\n        </div>\n    )\n}\nexport default header ","function saveToStorage(key, value) {\n    var str = JSON.stringify(value);\n    localStorage.setItem(key, str);\n}\nfunction loadFromStorage(key) {\n    // debugger\n    var str = localStorage.getItem(key)\n    return JSON.parse(str)\n}\n\nvar imges = {\n    \"Attack of the Clones\": \"https://vignette.wikia.nocookie.net/starwars/images/9/98/Aotctpb.jpg/revision/latest?cb=20110206033257\",\n    \"A New Hope\": \"https://starwarsblog.starwars.com/wp-content/uploads/2014/05/a-new-hope.jpg\",\n    \"The Phantom Menace\": \"https://m.media-amazon.com/images/M/MV5BYTRhNjcwNWQtMGJmMi00NmQyLWE2YzItODVmMTdjNWI0ZDA2XkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_.jpg\",\n    \"Revenge of the Sith\": \"https://images-na.ssl-images-amazon.com/images/I/81cUuRhZw%2BL._SL1500_.jpg\",\n    \"Return of the Jedi\": \"https://images-na.ssl-images-amazon.com/images/I/81g8vEs4ixL.jpg\",\n    \"The Empire Strikes Back\":\"https://images-na.ssl-images-amazon.com/images/I/91eOgodm4nL.jpg\",\n    \"The Force Awakens\": \"https://images-na.ssl-images-amazon.com/images/I/91xZGOnCFSL._SL1500_.jpg\"\n}\n\nfunction getImg(title){\nreturn imges[title]\n}\n\nexport default {\n    saveToStorage,\n    loadFromStorage,\n    getImg\n\n}","import React from 'react' \nimport classes from './Modal.module.scss'\nconst modal = (props) =>(\n    <div className={classes['modal-container']}>\n        <h2>{props.movie.title}</h2>\n        <p>director: {props.movie.director}</p>\n        <p>producer: {props.movie.producer}</p>\n        <p>release_date: {props.movie['release_date']}</p>\n        <p>opening_crawl: {props.movie['opening_crawl']}</p>\n    </div>\n)\nexport default modal ","import React from 'react' \nimport classes from './MoviePreview.module.scss'\nimport utilService from '../../services/utilService'\nimport Modal from '../ui/Modal/Modal'\nconst MoviePreview = (props) =>{\n    let movieTitle = props.movie.title\n    let movie = props.savedMovie && Object.keys(props.savedMovie).find(movie=> movie===movieTitle)\n    let fab = (props.savedMovie[movie])?\"fas fa-bookmark \":\"far fa-bookmark \"\n    let img = utilService.getImg(movieTitle)\n    let modalCmp = (props.show)? <Modal movie={props.movie}/>:\"\"\n    \n   return (\n       <div className={classes['preview-container']} >\n       {modalCmp}\n       <div className={classes['img-movie']} style={{backgroundImage: `url(${img})`}} onClick={ props.backdrop}></div>\n       <h1>{movieTitle}</h1>\n        <span onClick={()=>{props.click(movieTitle)}} className={fab}></span>\n       </div>\n    \n    )\n}\nexport default MoviePreview ","import React from 'react' \nimport classes from './MovieList.module.scss'\nimport MoviePreview from '../MoviePreview/MoviePreview';\nconst movieList = (props) =>{\n    console.log(props);\n    \n    let movieForDisplay =(props.movies)?props.movies.map(movie=><li key={movie.title}><MoviePreview  \n        movie={movie} savedMovie={props.savedMovie} click={props.click} backdrop={props.backdrop} show={props.show}/></li>):''\n    return(\n        <div className={classes['list-container']}>\n            <ul>\n                {movieForDisplay}\n            </ul>\n        \n        </div>\n    )\n}\nexport default movieList ","import React from 'react' \nimport classes from './About.module.scss'\nimport MovieList from '../MovieList/MovieList';\n\nconst about = (props) =>(\n    <div className={classes['about-container']} id=\"about\" >\n        <MovieList movies={props.movies} \n        savedMovie={props.savedMovie}\n        click={props.click}\n        backdrop={props.backdrop}\n        show={props.show}/>\n    </div>\n)\nexport default about ","\n\n\n\n\nasync function loadMovies(){\n\n   let movies = await swapiModule.getFilms()\n   console.log(movies);\n   return movies.results\n   \n  \n\n}\n\n\nexport default {\n    loadMovies\n}\n\n\nvar swapiModule = (function() {\n    var rootURL = \"https://swapi.co/api/\";\n  \n    function request(url, cb) {\n      return fetch(url)\n        .then(function(res) {\n          return res.json();\n        })\n        .then(function(data) {\n          if (typeof cb === \"function\") {\n            cb(data);\n          }\n  \n          return data;\n        })\n        .catch(function(err) {\n          console.log(err);\n        });\n    }\n  \n    function getResources(cb) {\n      return request(rootURL, cb);\n    }\n  \n    function singularRequestGenerator(path) {\n      return function(id, cb) {\n        return request(rootURL + path + \"/\" + id + \"/\", cb);\n      };\n    }\n  \n    function pluralRequestGenerator(path) {\n      return function() {\n  \n        let queryObject = undefined;\n        let cb = undefined;\n  \n        if (arguments.length > 1) {\n          queryObject = arguments[0];\n          cb = arguments[1];\n        } else if (arguments[0]) {\n          // If given exactly one argument\n          if (typeof arguments[0] === \"function\") {\n            cb = arguments[0];\n            queryObject = null;\n          } else {\n            cb = null;\n            queryObject = arguments[0];\n          }\n        }\n  \n        if (queryObject) {\n          let searchParams = new URLSearchParams();\n          for (let key of Object.keys(queryObject)) {\n            let value = queryObject[key];\n            searchParams.append(key, value);\n          }\n          return request(rootURL + path + \"/?\" + searchParams.toString(), cb);\n        }\n  \n        return request(rootURL + path + \"/\", cb);\n  \n      };\n    }\n  \n    return {\n      getResources: getResources,\n      getPerson: singularRequestGenerator(\"people\"),\n      getPeople: pluralRequestGenerator(\"people\"),\n      getFilm: singularRequestGenerator(\"films\"),\n      getFilms: pluralRequestGenerator(\"films\"),\n      getPlanet: singularRequestGenerator(\"planets\"),\n      getPlanets: pluralRequestGenerator(\"planets\"),\n      getSpecies: singularRequestGenerator(\"species\"),\n      getAllSpecies: pluralRequestGenerator(\"species\"),\n      getStarship: singularRequestGenerator(\"starships\"),\n      getStarships: pluralRequestGenerator(\"starships\"),\n      getVehicle: singularRequestGenerator(\"vehicles\"),\n      getVehicles: pluralRequestGenerator(\"vehicles\")\n    };\n  })();\n  ","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React,{Component} from 'react'\nimport classes from './Layout.module.scss'\nimport Header from '../../components/Header/Header'\nimport About from '../../components/About/About'\nimport movieServise from '../../services/movieService'\nimport utilService from '../../services/utilService'\nimport Backdrop from '../../components/ui/Backdrop/Backdrop'\n\n\n\nclass layout extends Component {\n    state = {  \n        movies: null,\n        savedMovie: [],\n        show:false\n    }\n\n    async componentDidMount(){\n\n       let movies = await movieServise.loadMovies()\n       let savedMovie = utilService.loadFromStorage('movies')\n       this.setState({movies,savedMovie})\n       console.log(this.state.savedMovie);\n       \n\n    }\n    handleSave =(movieTitle)=>{\n        let savedMovies = (!utilService.loadFromStorage('movies'))?{}:utilService.loadFromStorage('movies')\n        let val= (savedMovies[movieTitle]) ? false:true\n        savedMovies = {...savedMovies,[movieTitle]: val}\n        utilService.saveToStorage('movies',savedMovies)\n        this.setState({savedMovie:savedMovies})\n    }\n\n    handleBackdrop=()=>{\n        console.log('innnnn');\n        \n        this.setState(prevState =>{\n            let newVal = !prevState.show\n            return {show: newVal}\n        })\n    }\n\n    \n    render() { \n        \n        return (\n            <div className={classes['main-layout']}>\n                <Backdrop show={this.state.show} clicked={this.handleBackdrop}/>\n                <Header click={this.handelClick}/>\n                <About movies={this.state.movies } \n                savedMovie={this.state.savedMovie}\n                click={this.handleSave}\n                backdrop={this.handleBackdrop}\n                show={this.state.show}\n                />\n            </div>\n          );\n    }\n}\n \nexport default layout;","import React from 'react';\nimport './App.css';\nimport Layout from './containers/Layout/Layout'\n\n\nfunction App() {\n  return (\n  \n    <div className=\"App\">\n        <Layout/>\n    </div>\n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}